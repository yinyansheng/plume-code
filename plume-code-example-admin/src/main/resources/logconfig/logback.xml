<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <!--<property name="LOG_HOME" value="/home" />-->
    <!-- 控制台输出 -->
    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>


    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>info</level>
        </filter>
        <encoder>
            <Pattern>${CONSOLE_LOG_PATTERN}</Pattern>
            <!-- 设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 如果使用kafka作为队列，启用下面配置 -->
    <!--<appender name="plumelog_demo" class="KafkaAppender">-->
    <!--<appName>plumelog_demo</appName>-->
    <!--<kafkaHosts>172.16.247.143:9092,172.16.247.60:9092,172.16.247.64:9092</kafkaHosts>-->
    <!-- runModel 1,2  1表示最高性能模式，2表示低性能模式 但是2可以获取更多信息 不配置默认为1-->
    <!--<runModel>2</runModel>-->
    <!-- 整合其他链路插件，启用下面配置 sleuth表示整合springcloud.sleuth-->
    <!--<expand>sleuth</expand>-->
    <!--</appender>-->

<!--    <springProperty scope="context" name="plumelog.appName" source="plumelog.appName"/>-->
<!--    <springProperty scope="context" name="plumelog.redisHost" source="plumelog.redisHost"/>-->
<!--    <springProperty scope="context" name="plumelog.redisAuth" source="plumelog.redisAuth"/>-->
<!--    <springProperty scope="context" name="plumelog.redisPort" source="plumelog.redisPort"/>-->
<!--    &lt;!&ndash; 如果使用redis作为队列，启用下面配置 &ndash;&gt;-->
<!--    <appender name="plumelog" class="com.plumelog.logback.appender.RedisAppender">-->
<!--        <appName>${plumelog.appName}</appName>-->
<!--        <redisHost>${plumelog.redisHost}</redisHost>-->
<!--        &lt;!&ndash; 如果使用redis有密码，启用下面配置 &ndash;&gt;-->
<!--        <redisAuth>${plumelog.redisAuth}</redisAuth>-->
<!--        &lt;!&ndash; redis端口号，不配置默认6379&ndash;&gt;-->
<!--        <redisPort>${plumelog.redisPort}</redisPort>-->
<!--        &lt;!&ndash; runModel 1,2  1表示最高性能模式，2表示低性能模式 但是2可以获取更多信息 不配置默认为1&ndash;&gt;-->
<!--        <runModel>2</runModel>-->
<!--        &lt;!&ndash; 整合其他链路插件，启用下面配置 sleuth表示整合springcloud.sleuth&ndash;&gt;-->
<!--        <expand>sleuth</expand>-->
<!--    </appender>-->

    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="console"/>
<!--        <appender-ref ref="plumelog"/>-->
    </root>
</configuration>
